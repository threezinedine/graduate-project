/*
 * AnalogInputHandlers.c
 *
 *  Created on: Feb 13, 2024
 *      Author: Acer
 */


#include "AnalogInputHandlers.h"
#include "AnalogInput.h"
#include "main.h"

extern ADC_HandleTypeDef hadc1;
extern ADC_HandleTypeDef hadc2;

static void AD1_Select_CH4(void);
static void AD1_Select_CH5(void);
static void AD2_Select_CH2(void);
static void AD2_Select_CH3(void);

float AD1_Handler(AnalogInput_Instance *sIns)
{
	float result = 0.0f;
	AD1_Select_CH5();
	HAL_ADC_Start(&hadc1);
	HAL_ADC_PollForConversion(&hadc1, 100);
	result = (3.3 / 4095) * HAL_ADC_GetValue(&hadc1);
	HAL_ADC_Stop(&hadc1);
	return result;
}

float AD2_Handler(AnalogInput_Instance *sIns)
{
	float result = 0.0f;
	AD1_Select_CH4();
	HAL_ADC_Start(&hadc1);
	HAL_ADC_PollForConversion(&hadc1, 100);
	result = (3.3 / 4095) * HAL_ADC_GetValue(&hadc1);
	HAL_ADC_Stop(&hadc1);
	return result;
}

float AD3_Handler(AnalogInput_Instance *sIns)
{
	float result = 0.0f;
	AD1_Select_CH4();
	HAL_ADC_Start(&hadc1);
	HAL_ADC_PollForConversion(&hadc1, 100);
	result = (3.3 / 4095) * HAL_ADC_GetValue(&hadc1);
	HAL_ADC_Stop(&hadc1);
	return result;
}

float AD4_Handler(AnalogInput_Instance *sIns)
{
	float result = 0.0f;
	AD1_Select_CH4();
	HAL_ADC_Start(&hadc1);
	HAL_ADC_PollForConversion(&hadc1, 100);
	result = (3.3 / 4095) * HAL_ADC_GetValue(&hadc1);
	HAL_ADC_Stop(&hadc1);
	return result;
}

static void AD1_Select_CH4(void)
{
	ADC_ChannelConfTypeDef sConfig = {0};
	sConfig.Channel = ADC_CHANNEL_4;
	sConfig.Rank = ADC_REGULAR_RANK_1;
	sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
	{
		Error_Handler();
	}
}

static void AD1_Select_CH5(void)
{
	ADC_ChannelConfTypeDef sConfig = {0};
	sConfig.Channel = ADC_CHANNEL_5;
	sConfig.Rank = ADC_REGULAR_RANK_1;
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
	{
		Error_Handler();
	}
}

static void AD2_Select_CH2(void)
{
	ADC_ChannelConfTypeDef sConfig = {0};
	sConfig.Channel = ADC_CHANNEL_2;
	sConfig.Rank = ADC_REGULAR_RANK_1;
	sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
	if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
	{
		Error_Handler();
	}
}

static void AD2_Select_CH3(void)
{
	ADC_ChannelConfTypeDef sConfig = {0};
	sConfig.Channel = ADC_CHANNEL_3;
	sConfig.Rank = ADC_REGULAR_RANK_1;
	if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
	{
		Error_Handler();
	}
}
